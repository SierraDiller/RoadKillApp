const nodemailer = require('nodemailer');
const moment = require('moment');

// Email configuration
const transporter = nodemailer.createTransporter({
  host: process.env.SMTP_HOST || 'smtp.gmail.com',
  port: process.env.SMTP_PORT || 587,
  secure: false,
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});

// Oak Ridge Public Works contact information
const OAK_RIDGE_CONTACTS = {
  publicWorks: {
    email: 'publicworks@oakridgetn.gov',
    phone: '(865) 425-3450',
    department: 'Oak Ridge Public Works',
  },
};

const generateEmailTemplate = (report) => {
  const reportDate = moment(report.createdAt).format('MMMM Do YYYY, h:mm A');
  const location = report.location;
  
  return `
Subject: Roadkill Report - ${report.id.slice(0, 8)} - ${report.address}

Dear Oak Ridge Public Works,

A roadkill incident has been reported through the Roadkill Reporter app:

Report ID: ${report.id}
Location: ${report.address}
GPS Coordinates: ${location.latitude}, ${location.longitude}
Animal Type: ${report.animalType}
Size: ${report.size}
Description: ${report.description || 'No description provided'}
Photo: ${report.photoUrl ? 'Available - see attached' : 'No photo provided'}
Reported By: ${report.contactEmail || report.contactPhone || 'Anonymous'}
Report Time: ${reportDate}

Please respond to this report when cleanup is complete.

Best regards,
Roadkill Reporter App
  `.trim();
};

const sendCityNotification = async (report) => {
  try {
    const emailContent = generateEmailTemplate(report);
    
    const mailOptions = {
      from: process.env.FROM_EMAIL || 'noreply@roadkillreporter.com',
      to: OAK_RIDGE_CONTACTS.publicWorks.email,
      subject: `Roadkill Report - ${report.id.slice(0, 8)} - ${report.address}`,
      text: emailContent,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2E7D32;">Roadkill Report</h2>
          
          <div style="background-color: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>Report Details</h3>
            <p><strong>Report ID:</strong> ${report.id}</p>
            <p><strong>Location:</strong> ${report.address}</p>
            <p><strong>GPS Coordinates:</strong> ${report.location.latitude}, ${report.location.longitude}</p>
            <p><strong>Animal Type:</strong> ${report.animalType}</p>
            <p><strong>Size:</strong> ${report.size}</p>
            ${report.description ? `<p><strong>Description:</strong> ${report.description}</p>` : ''}
            <p><strong>Photo:</strong> ${report.photoUrl ? 'Available' : 'No photo provided'}</p>
            <p><strong>Reported By:</strong> ${report.contactEmail || report.contactPhone || 'Anonymous'}</p>
            <p><strong>Report Time:</strong> ${moment(report.createdAt).format('MMMM Do YYYY, h:mm A')}</p>
          </div>
          
          <p>Please respond to this report when cleanup is complete.</p>
          
          <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
          <p style="color: #666; font-size: 12px;">
            This email was automatically generated by the Roadkill Reporter App.
          </p>
        </div>
      `,
    };

    // Add photo attachment if available
    if (report.photoUrl) {
      mailOptions.attachments = [
        {
          filename: `roadkill-${report.id.slice(0, 8)}.jpg`,
          path: report.photoUrl,
        },
      ];
    }

    const result = await transporter.sendMail(mailOptions);
    
    console.log('City notification sent successfully:', result.messageId);
    return result;
  } catch (error) {
    console.error('Failed to send city notification:', error);
    throw error;
  }
};

const sendUserUpdate = async (report, status) => {
  try {
    if (!report.sendUpdates || (!report.contactEmail && !report.contactPhone)) {
      return null;
    }

    const statusMessages = {
      'in-progress': 'Your roadkill report is now being processed by Oak Ridge Public Works.',
      'resolved': 'Your roadkill report has been resolved and cleanup has been completed.',
    };

    const message = statusMessages[status];
    if (!message) return null;

    const mailOptions = {
      from: process.env.FROM_EMAIL || 'noreply@roadkillreporter.com',
      to: report.contactEmail,
      subject: `Roadkill Report Update - ${report.id.slice(0, 8)}`,
      text: `
Dear User,

${message}

Report Details:
- Report ID: ${report.id}
- Location: ${report.address}
- Animal Type: ${report.animalType}
- Status: ${status}

Thank you for using Roadkill Reporter.

Best regards,
Roadkill Reporter Team
      `.trim(),
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2E7D32;">Report Update</h2>
          
          <p>${message}</p>
          
          <div style="background-color: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>Report Details</h3>
            <p><strong>Report ID:</strong> ${report.id}</p>
            <p><strong>Location:</strong> ${report.address}</p>
            <p><strong>Animal Type:</strong> ${report.animalType}</p>
            <p><strong>Status:</strong> ${status}</p>
          </div>
          
          <p>Thank you for using Roadkill Reporter.</p>
          
          <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
          <p style="color: #666; font-size: 12px;">
            This email was automatically generated by the Roadkill Reporter App.
          </p>
        </div>
      `,
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('User update sent successfully:', result.messageId);
    return result;
  } catch (error) {
    console.error('Failed to send user update:', error);
    throw error;
  }
};

const sendVerificationEmail = async (email, code) => {
  try {
    const mailOptions = {
      from: process.env.FROM_EMAIL || 'noreply@roadkillreporter.com',
      to: email,
      subject: 'Verify Your Email - Roadkill Reporter',
      text: `
Thank you for using Roadkill Reporter!

Your verification code is: ${code}

This code will expire in 10 minutes.

If you didn't request this code, please ignore this email.

Best regards,
Roadkill Reporter Team
      `.trim(),
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2E7D32;">Verify Your Email</h2>
          
          <p>Thank you for using Roadkill Reporter!</p>
          
          <div style="background-color: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center;">
            <h3>Your verification code is:</h3>
            <h1 style="color: #2E7D32; font-size: 32px; letter-spacing: 4px;">${code}</h1>
            <p style="color: #666;">This code will expire in 10 minutes.</p>
          </div>
          
          <p>If you didn't request this code, please ignore this email.</p>
          
          <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
          <p style="color: #666; font-size: 12px;">
            This email was automatically generated by the Roadkill Reporter App.
          </p>
        </div>
      `,
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('Verification email sent successfully:', result.messageId);
    return result;
  } catch (error) {
    console.error('Failed to send verification email:', error);
    throw error;
  }
};

module.exports = {
  sendCityNotification,
  sendUserUpdate,
  sendVerificationEmail,
  OAK_RIDGE_CONTACTS,
}; 